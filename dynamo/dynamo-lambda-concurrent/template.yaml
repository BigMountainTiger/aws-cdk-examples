Resources:
  DYNAMOLambdaConcurrentSTACKLambdaRoleE9547C75:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      RoleName: DYNAMO-Lambda-Concurrent-STACK-Lambda-Role
    Metadata:
      aws:cdk:path: DYNAMO-Lambda-Concurrent-STACK/DYNAMO-Lambda-Concurrent-STACK-Lambda-Role/Resource
  DYNAMOLambdaConcurrentSTACKLambdaRoleDefaultPolicy30154589:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      PolicyName: DYNAMOLambdaConcurrentSTACKLambdaRoleDefaultPolicy30154589
      Roles:
        - Ref: DYNAMOLambdaConcurrentSTACKLambdaRoleE9547C75
    Metadata:
      aws:cdk:path: DYNAMO-Lambda-Concurrent-STACK/DYNAMO-Lambda-Concurrent-STACK-Lambda-Role/DefaultPolicy/Resource
  DYNAMOLambdaConcurrentSTACKLambda4012E869:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParameters131ea3b3346ab44f33e04e65f0c872299fcf9fdadbca97802ffcecefa9d386b1S3Bucket90DAB95C
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters131ea3b3346ab44f33e04e65f0c872299fcf9fdadbca97802ffcecefa9d386b1S3VersionKey4A35F4E9
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters131ea3b3346ab44f33e04e65f0c872299fcf9fdadbca97802ffcecefa9d386b1S3VersionKey4A35F4E9
      Role:
        Fn::GetAtt:
          - DYNAMOLambdaConcurrentSTACKLambdaRoleE9547C75
          - Arn
      FunctionName: DYNAMO-Lambda-Concurrent-STACK-Lambda
      Handler: app.lambdaHandler
      MemorySize: 256
      ReservedConcurrentExecutions: 1
      Runtime: python3.9
      Timeout: 120
    DependsOn:
      - DYNAMOLambdaConcurrentSTACKLambdaRoleDefaultPolicy30154589
      - DYNAMOLambdaConcurrentSTACKLambdaRoleE9547C75
    Metadata:
      aws:cdk:path: DYNAMO-Lambda-Concurrent-STACK/DYNAMO-Lambda-Concurrent-STACK-Lambda/Resource
      aws:asset:path: /home/song/Sandbox/aws-cdk-examples/dynamo/dynamo-lambda-concurrent/lambdas/no-concurrency-lambda
      aws:asset:property: Code
  DYNAMOLambdaConcurrentSTACKLambdaApiAccessPermission598F914B:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - DYNAMOLambdaConcurrentSTACKLambda4012E869
          - Arn
      Principal: apigateway.amazonaws.com
    Metadata:
      aws:cdk:path: DYNAMO-Lambda-Concurrent-STACK/DYNAMO-Lambda-Concurrent-STACK-Lambda/ApiAccessPermission
  DYNAMOLambdaConcurrentSTACKAPIGW8D77FBB2:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Description: DYNAMO-Lambda-Concurrent-STACK-API-GW
      EndpointConfiguration:
        Types:
          - REGIONAL
      Name: DYNAMO-Lambda-Concurrent-STACK-API-GW
    Metadata:
      aws:cdk:path: DYNAMO-Lambda-Concurrent-STACK/DYNAMO-Lambda-Concurrent-STACK-API-GW/Resource
  DYNAMOLambdaConcurrentSTACKAPIGWCloudWatchRole00CB8C44:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: apigateway.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs
    Metadata:
      aws:cdk:path: DYNAMO-Lambda-Concurrent-STACK/DYNAMO-Lambda-Concurrent-STACK-API-GW/CloudWatchRole/Resource
  DYNAMOLambdaConcurrentSTACKAPIGWAccountDEC6350F:
    Type: AWS::ApiGateway::Account
    Properties:
      CloudWatchRoleArn:
        Fn::GetAtt:
          - DYNAMOLambdaConcurrentSTACKAPIGWCloudWatchRole00CB8C44
          - Arn
    DependsOn:
      - DYNAMOLambdaConcurrentSTACKAPIGW8D77FBB2
    Metadata:
      aws:cdk:path: DYNAMO-Lambda-Concurrent-STACK/DYNAMO-Lambda-Concurrent-STACK-API-GW/Account
  DYNAMOLambdaConcurrentSTACKAPIGWDeploymentE13DFEF97605c8084b0f1ea8e87f8941b5aeed1d:
    Type: AWS::ApiGateway::Deployment
    Properties:
      RestApiId:
        Ref: DYNAMOLambdaConcurrentSTACKAPIGW8D77FBB2
      Description: Automatically created by the RestApi construct
    DependsOn:
      - DYNAMOLambdaConcurrentSTACKAPIGWGETE666DDBA
    Metadata:
      aws:cdk:path: DYNAMO-Lambda-Concurrent-STACK/DYNAMO-Lambda-Concurrent-STACK-API-GW/Deployment/Resource
  DYNAMOLambdaConcurrentSTACKAPIGWDeploymentStageprodBE5DEB26:
    Type: AWS::ApiGateway::Stage
    Properties:
      RestApiId:
        Ref: DYNAMOLambdaConcurrentSTACKAPIGW8D77FBB2
      DeploymentId:
        Ref: DYNAMOLambdaConcurrentSTACKAPIGWDeploymentE13DFEF97605c8084b0f1ea8e87f8941b5aeed1d
      StageName: prod
    Metadata:
      aws:cdk:path: DYNAMO-Lambda-Concurrent-STACK/DYNAMO-Lambda-Concurrent-STACK-API-GW/DeploymentStage.prod/Resource
  DYNAMOLambdaConcurrentSTACKAPIGWGETApiPermissionDYNAMOLambdaConcurrentSTACKDYNAMOLambdaConcurrentSTACKAPIGW5C1271AEGET769299F5:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - DYNAMOLambdaConcurrentSTACKLambda4012E869
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: DYNAMOLambdaConcurrentSTACKAPIGW8D77FBB2
            - /
            - Ref: DYNAMOLambdaConcurrentSTACKAPIGWDeploymentStageprodBE5DEB26
            - /GET/
    Metadata:
      aws:cdk:path: DYNAMO-Lambda-Concurrent-STACK/DYNAMO-Lambda-Concurrent-STACK-API-GW/Default/GET/ApiPermission.DYNAMOLambdaConcurrentSTACKDYNAMOLambdaConcurrentSTACKAPIGW5C1271AE.GET..
  DYNAMOLambdaConcurrentSTACKAPIGWGETApiPermissionTestDYNAMOLambdaConcurrentSTACKDYNAMOLambdaConcurrentSTACKAPIGW5C1271AEGET6995F25B:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - DYNAMOLambdaConcurrentSTACKLambda4012E869
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: DYNAMOLambdaConcurrentSTACKAPIGW8D77FBB2
            - /test-invoke-stage/GET/
    Metadata:
      aws:cdk:path: DYNAMO-Lambda-Concurrent-STACK/DYNAMO-Lambda-Concurrent-STACK-API-GW/Default/GET/ApiPermission.Test.DYNAMOLambdaConcurrentSTACKDYNAMOLambdaConcurrentSTACKAPIGW5C1271AE.GET..
  DYNAMOLambdaConcurrentSTACKAPIGWGETE666DDBA:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: GET
      ResourceId:
        Fn::GetAtt:
          - DYNAMOLambdaConcurrentSTACKAPIGW8D77FBB2
          - RootResourceId
      RestApiId:
        Ref: DYNAMOLambdaConcurrentSTACKAPIGW8D77FBB2
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - DYNAMOLambdaConcurrentSTACKLambda4012E869
                  - Arn
              - /invocations
    Metadata:
      aws:cdk:path: DYNAMO-Lambda-Concurrent-STACK/DYNAMO-Lambda-Concurrent-STACK-API-GW/Default/GET/Resource
Parameters:
  AssetParameters131ea3b3346ab44f33e04e65f0c872299fcf9fdadbca97802ffcecefa9d386b1S3Bucket90DAB95C:
    Type: String
    Description: S3 bucket for asset "131ea3b3346ab44f33e04e65f0c872299fcf9fdadbca97802ffcecefa9d386b1"
  AssetParameters131ea3b3346ab44f33e04e65f0c872299fcf9fdadbca97802ffcecefa9d386b1S3VersionKey4A35F4E9:
    Type: String
    Description: S3 key for asset version "131ea3b3346ab44f33e04e65f0c872299fcf9fdadbca97802ffcecefa9d386b1"
  AssetParameters131ea3b3346ab44f33e04e65f0c872299fcf9fdadbca97802ffcecefa9d386b1ArtifactHash9AAB6744:
    Type: String
    Description: Artifact hash for asset "131ea3b3346ab44f33e04e65f0c872299fcf9fdadbca97802ffcecefa9d386b1"
Outputs:
  DYNAMOLambdaConcurrentSTACKAPIGWEndpoint1E65D2F9:
    Value:
      Fn::Join:
        - ""
        - - https://
          - Ref: DYNAMOLambdaConcurrentSTACKAPIGW8D77FBB2
          - .execute-api.
          - Ref: AWS::Region
          - "."
          - Ref: AWS::URLSuffix
          - /
          - Ref: DYNAMOLambdaConcurrentSTACKAPIGWDeploymentStageprodBE5DEB26
          - /

