Description: S3-EVENT-CDK-STACK
Resources:
  S3EVENTBUCKET6363C5DD:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: s3-event-bucket.huge.head.li
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: S3-EVENT-CDK-STACK/S3_EVENT_BUCKET/Resource
  S3EVENTBUCKETNotifications25ED71A1:
    Type: Custom::S3BucketNotifications
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - BucketNotificationsHandler050a0587b7544547bf325f094a3db8347ECC3691
          - Arn
      BucketName:
        Ref: S3EVENTBUCKET6363C5DD
      NotificationConfiguration:
        LambdaFunctionConfigurations:
          - Events:
              - s3:ObjectCreated:*
            LambdaFunctionArn:
              Fn::GetAtt:
                - S3EVENTLAMBDAHANDLERC2159401
                - Arn
    DependsOn:
      - S3EVENTLAMBDAHANDLERAllowBucketNotificationsFromS3EVENTCDKSTACKS3EVENTBUCKET02B94ED38EE62B58
    Metadata:
      aws:cdk:path: S3-EVENT-CDK-STACK/S3_EVENT_BUCKET/Notifications/Resource
  S3EVENTLAMBDAHANDLERROLE7B06397E:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      Description: S3_EVENT_LAMBDA_HANDLER_ROLE
      RoleName: S3_EVENT_LAMBDA_HANDLER_ROLE
    Metadata:
      aws:cdk:path: S3-EVENT-CDK-STACK/S3_EVENT_LAMBDA_HANDLER_ROLE/Resource
  S3EVENTLAMBDAHANDLERROLEDefaultPolicy23DE2ABE:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: s3:PutBucketNotification
            Effect: Allow
            Resource: "*"
          - Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      PolicyName: S3EVENTLAMBDAHANDLERROLEDefaultPolicy23DE2ABE
      Roles:
        - Ref: S3EVENTLAMBDAHANDLERROLE7B06397E
    Metadata:
      aws:cdk:path: S3-EVENT-CDK-STACK/S3_EVENT_LAMBDA_HANDLER_ROLE/DefaultPolicy/Resource
  S3EVENTLAMBDAHANDLERC2159401:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParameters214c14d52aaa4aabbe1fca7629bbcdc933bfab8fda020841204784ebd5eacd6aS3Bucket4B7490B4
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters214c14d52aaa4aabbe1fca7629bbcdc933bfab8fda020841204784ebd5eacd6aS3VersionKey0A9697C4
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters214c14d52aaa4aabbe1fca7629bbcdc933bfab8fda020841204784ebd5eacd6aS3VersionKey0A9697C4
      Handler: app.lambdaHandler
      Role:
        Fn::GetAtt:
          - S3EVENTLAMBDAHANDLERROLE7B06397E
          - Arn
      Runtime: nodejs12.x
      Description: S3_EVENT_LAMBDA_HANDLER
      FunctionName: S3_EVENT_LAMBDA_HANDLER
      MemorySize: 256
      Timeout: 15
    DependsOn:
      - S3EVENTLAMBDAHANDLERROLEDefaultPolicy23DE2ABE
      - S3EVENTLAMBDAHANDLERROLE7B06397E
    Metadata:
      aws:cdk:path: S3-EVENT-CDK-STACK/S3_EVENT_LAMBDA_HANDLER/Resource
      aws:asset:path: /home/song/Sandbox/aws-cdk-examples/s3-event-cdk/lambdas/s3-event-handler-lambda
      aws:asset:property: Code
  S3EVENTLAMBDAHANDLERAllowBucketNotificationsFromS3EVENTCDKSTACKS3EVENTBUCKET02B94ED38EE62B58:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - S3EVENTLAMBDAHANDLERC2159401
          - Arn
      Principal: s3.amazonaws.com
      SourceAccount:
        Ref: AWS::AccountId
      SourceArn:
        Fn::GetAtt:
          - S3EVENTBUCKET6363C5DD
          - Arn
    Metadata:
      aws:cdk:path: S3-EVENT-CDK-STACK/S3_EVENT_LAMBDA_HANDLER/AllowBucketNotificationsFromS3EVENTCDKSTACKS3EVENTBUCKET02B94ED3
  S3PRESIGNEDURLLAMBDAROLE9B1D1A18:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      Description: S3_PRESIGNED_URL_LAMBDA_ROLE
      RoleName: S3_PRESIGNED_URL_LAMBDA_ROLE
    Metadata:
      aws:cdk:path: S3-EVENT-CDK-STACK/S3_PRESIGNED_URL_LAMBDA_ROLE/Resource
  S3PRESIGNEDURLLAMBDAROLEDefaultPolicy7C999F8D:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      PolicyName: S3PRESIGNEDURLLAMBDAROLEDefaultPolicy7C999F8D
      Roles:
        - Ref: S3PRESIGNEDURLLAMBDAROLE9B1D1A18
    Metadata:
      aws:cdk:path: S3-EVENT-CDK-STACK/S3_PRESIGNED_URL_LAMBDA_ROLE/DefaultPolicy/Resource
  S3PRESIGNEDURLLAMBDA9E1C8D88:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParameters7470dbe146868719d57ec3a80972296218345f822760aaa3eedeadc05daa066eS3Bucket6A58C3C6
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters7470dbe146868719d57ec3a80972296218345f822760aaa3eedeadc05daa066eS3VersionKey7AC32341
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters7470dbe146868719d57ec3a80972296218345f822760aaa3eedeadc05daa066eS3VersionKey7AC32341
      Handler: app.lambdaHandler
      Role:
        Fn::GetAtt:
          - S3PRESIGNEDURLLAMBDAROLE9B1D1A18
          - Arn
      Runtime: nodejs12.x
      Description: S3_PRESIGNED_URL_LAMBDA
      FunctionName: S3_PRESIGNED_URL_LAMBDA
      MemorySize: 256
      Timeout: 15
    DependsOn:
      - S3PRESIGNEDURLLAMBDAROLEDefaultPolicy7C999F8D
      - S3PRESIGNEDURLLAMBDAROLE9B1D1A18
    Metadata:
      aws:cdk:path: S3-EVENT-CDK-STACK/S3_PRESIGNED_URL_LAMBDA/Resource
      aws:asset:path: /home/song/Sandbox/aws-cdk-examples/s3-event-cdk/lambdas/s3-presigned-url-lambda
      aws:asset:property: Code
  S3GETPUTLAMBDAROLE26CE4DF4:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      Description: S3_GET_PUT_LAMBDA_ROLE
      RoleName: S3_GET_PUT_LAMBDA_ROLE
    Metadata:
      aws:cdk:path: S3-EVENT-CDK-STACK/S3_GET_PUT_LAMBDA_ROLE/Resource
  S3GETPUTLAMBDAROLEDefaultPolicy611B5C19:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - s3:GetObject
              - s3:PutObject
            Effect: Allow
            Resource: arn:aws:s3:::*
          - Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      PolicyName: S3GETPUTLAMBDAROLEDefaultPolicy611B5C19
      Roles:
        - Ref: S3GETPUTLAMBDAROLE26CE4DF4
    Metadata:
      aws:cdk:path: S3-EVENT-CDK-STACK/S3_GET_PUT_LAMBDA_ROLE/DefaultPolicy/Resource
  S3GETPUTLAMBDAF0460A43:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParameterse5810f6cc734c08fba29e94deecf6e18a2d31979814ffa89d1bbd3cbe93dde69S3BucketF2FF94A2
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameterse5810f6cc734c08fba29e94deecf6e18a2d31979814ffa89d1bbd3cbe93dde69S3VersionKeyA537DF61
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameterse5810f6cc734c08fba29e94deecf6e18a2d31979814ffa89d1bbd3cbe93dde69S3VersionKeyA537DF61
      Handler: app.lambdaHandler
      Role:
        Fn::GetAtt:
          - S3GETPUTLAMBDAROLE26CE4DF4
          - Arn
      Runtime: nodejs12.x
      Description: S3_GET_PUT_LAMBDA
      FunctionName: S3_GET_PUT_LAMBDA
      MemorySize: 256
      Timeout: 15
    DependsOn:
      - S3GETPUTLAMBDAROLEDefaultPolicy611B5C19
      - S3GETPUTLAMBDAROLE26CE4DF4
    Metadata:
      aws:cdk:path: S3-EVENT-CDK-STACK/S3_GET_PUT_LAMBDA/Resource
      aws:asset:path: /home/song/Sandbox/aws-cdk-examples/s3-event-cdk/lambdas/s3-get-put-lambda
      aws:asset:property: Code
  BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: S3-EVENT-CDK-STACK/BucketNotificationsHandler050a0587b7544547bf325f094a3db834/Role/Resource
  BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: s3:PutBucketNotification
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      PolicyName: BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36
      Roles:
        - Ref: BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC
    Metadata:
      aws:cdk:path: S3-EVENT-CDK-STACK/BucketNotificationsHandler050a0587b7544547bf325f094a3db834/Role/DefaultPolicy/Resource
  BucketNotificationsHandler050a0587b7544547bf325f094a3db8347ECC3691:
    Type: AWS::Lambda::Function
    Properties:
      Description: AWS CloudFormation handler for "Custom::S3BucketNotifications" resources (@aws-cdk/aws-s3)
      Code:
        ZipFile: >-
          exports.handler = (event, context) => {
              // eslint-disable-next-line @typescript-eslint/no-require-imports, import/no-extraneous-dependencies
              const s3 = new (require('aws-sdk').S3)();
              // eslint-disable-next-line @typescript-eslint/no-require-imports
              const https = require('https');
              // eslint-disable-next-line @typescript-eslint/no-require-imports
              const url = require('url');
              log(JSON.stringify(event, undefined, 2));
              const props = event.ResourceProperties;
              if (event.RequestType === 'Delete') {
                  props.NotificationConfiguration = {}; // this is how you clean out notifications
              }
              const req = {
                  Bucket: props.BucketName,
                  NotificationConfiguration: props.NotificationConfiguration,
              };
              return s3.putBucketNotificationConfiguration(req, (err, data) => {
                  log({ err, data });
                  if (err) {
                      return submitResponse('FAILED', err.message + `\nMore information in CloudWatch Log Stream: ${context.logStreamName}`);
                  }
                  else {
                      return submitResponse('SUCCESS');
                  }
              });
              function log(obj) {
                  console.error(event.RequestId, event.StackId, event.LogicalResourceId, obj);
              }
              // tslint:disable-next-line:max-line-length
              // adapted from https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-code.html#cfn-lambda-function-code-cfnresponsemodule
              // to allow sending an error messge as a reason.
              function submitResponse(responseStatus, reason) {
                  const responseBody = JSON.stringify({
                      Status: responseStatus,
                      Reason: reason || 'See the details in CloudWatch Log Stream: ' + context.logStreamName,
                      PhysicalResourceId: event.PhysicalResourceId || event.LogicalResourceId,
                      StackId: event.StackId,
                      RequestId: event.RequestId,
                      LogicalResourceId: event.LogicalResourceId,
                      NoEcho: false,
                  });
                  log({ responseBody });
                  const parsedUrl = url.parse(event.ResponseURL);
                  const options = {
                      hostname: parsedUrl.hostname,
                      port: 443,
                      path: parsedUrl.path,
                      method: 'PUT',
                      headers: {
                          'content-type': '',
                          'content-length': responseBody.length,
                      },
                  };
                  const request = https.request(options, (r) => {
                      log({ statusCode: r.statusCode, statusMessage: r.statusMessage });
                      context.done();
                  });
                  request.on('error', (error) => {
                      log({ sendError: error });
                      context.done();
                  });
                  request.write(responseBody);
                  request.end();
              }
          };
      Handler: index.handler
      Role:
        Fn::GetAtt:
          - BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC
          - Arn
      Runtime: nodejs10.x
      Timeout: 300
    DependsOn:
      - BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36
      - BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC
    Metadata:
      aws:cdk:path: S3-EVENT-CDK-STACK/BucketNotificationsHandler050a0587b7544547bf325f094a3db834/Resource
Parameters:
  AssetParameters214c14d52aaa4aabbe1fca7629bbcdc933bfab8fda020841204784ebd5eacd6aS3Bucket4B7490B4:
    Type: String
    Description: S3 bucket for asset "214c14d52aaa4aabbe1fca7629bbcdc933bfab8fda020841204784ebd5eacd6a"
  AssetParameters214c14d52aaa4aabbe1fca7629bbcdc933bfab8fda020841204784ebd5eacd6aS3VersionKey0A9697C4:
    Type: String
    Description: S3 key for asset version "214c14d52aaa4aabbe1fca7629bbcdc933bfab8fda020841204784ebd5eacd6a"
  AssetParameters214c14d52aaa4aabbe1fca7629bbcdc933bfab8fda020841204784ebd5eacd6aArtifactHash5DB3CDFC:
    Type: String
    Description: Artifact hash for asset "214c14d52aaa4aabbe1fca7629bbcdc933bfab8fda020841204784ebd5eacd6a"
  AssetParameters7470dbe146868719d57ec3a80972296218345f822760aaa3eedeadc05daa066eS3Bucket6A58C3C6:
    Type: String
    Description: S3 bucket for asset "7470dbe146868719d57ec3a80972296218345f822760aaa3eedeadc05daa066e"
  AssetParameters7470dbe146868719d57ec3a80972296218345f822760aaa3eedeadc05daa066eS3VersionKey7AC32341:
    Type: String
    Description: S3 key for asset version "7470dbe146868719d57ec3a80972296218345f822760aaa3eedeadc05daa066e"
  AssetParameters7470dbe146868719d57ec3a80972296218345f822760aaa3eedeadc05daa066eArtifactHashE091BCA6:
    Type: String
    Description: Artifact hash for asset "7470dbe146868719d57ec3a80972296218345f822760aaa3eedeadc05daa066e"
  AssetParameterse5810f6cc734c08fba29e94deecf6e18a2d31979814ffa89d1bbd3cbe93dde69S3BucketF2FF94A2:
    Type: String
    Description: S3 bucket for asset "e5810f6cc734c08fba29e94deecf6e18a2d31979814ffa89d1bbd3cbe93dde69"
  AssetParameterse5810f6cc734c08fba29e94deecf6e18a2d31979814ffa89d1bbd3cbe93dde69S3VersionKeyA537DF61:
    Type: String
    Description: S3 key for asset version "e5810f6cc734c08fba29e94deecf6e18a2d31979814ffa89d1bbd3cbe93dde69"
  AssetParameterse5810f6cc734c08fba29e94deecf6e18a2d31979814ffa89d1bbd3cbe93dde69ArtifactHash5F9D3939:
    Type: String
    Description: Artifact hash for asset "e5810f6cc734c08fba29e94deecf6e18a2d31979814ffa89d1bbd3cbe93dde69"

